Algorithm A2 (F)
Input : A CNF formula F
Parameters : Integers max-loops, max-tries; noise parameter p ∈ [0, 1]
Output : A satisfying assignment for F , or FAIL

begin
// Color Assignment
G ← a graph of the literals in F with edges between literals that appear together in a clause
K ← the set of literals
g ← Greedy-Color(G, K) // a dictionary of literals and their assigned colors
clr ← the set of unique colors in g

for i ← 1 to max-tries do
σ ← a randomly generated truth assignment for F

for j ← 1 to max-loops do
if σ satisfies F then return σ // success

for k in clr do
C ← unsatisfied clauses in F with at least one variable of color = k

if ∃ variable x ∈ C with break-count = 0 & color = k then
v ← x // freebie move

else
With probability p: // random walk move
v ← a variable in C of color = k

With probability 1 − p: // greedy move
v ← a variable in C of color = k with the smallest break-count
Flip v in σ

return FAIL // no satisfying assignment found
end A2 

algorithm Greedy-Color(G, K);
begin
for v := v_1 to v_n do
give vertex v the smallest possible color;
end Greedy-Color 